/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.ConexionMysql;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author Alvaro
 */
public class AgregarCita extends javax.swing.JInternalFrame {

    public String comandosql="Select * from Doctores WHERE estadoDoctor='ACTIVO'";
    /**
     * Creates new form agregarCita
     */
    public AgregarCita() {
        initComponents();
       
    }
    public void CargarId()
    {
    // El siguiente codigo se encarga de limpiar el combobox...
    // Es parecido a limpiar la tabla    
    int itemCount = comboSoloID.getItemCount();

    for(int i=0;i<itemCount;i++){
        comboSoloID.removeItemAt(0);
     }
    
      try {
         ConexionMysql Puente=new ConexionMysql();
         Statement sentencia; // st
         ResultSet resultado; //rs 
         
         Puente.IniciarConexion();
         Connection conn=Puente.getMyConnection();
         sentencia= conn.createStatement();
         
        // JOptionPane.showMessageDialog(null,"La consulta sera"+comandosql);
         resultado = sentencia.executeQuery(comandosql);
         ResultSetMetaData meta = resultado.getMetaData();
         int columnas = meta.getColumnCount();  //Mientras haya registros 
         
         while (resultado.next()) 
         {
                for (int i = 1; i <= columnas; i++) 
                { //Mostrar el dato del campo i
                  if(i==1)  
                  {comboSoloID.addItem(resultado.getString(i).toString());
                  }
                  // El if, es para que solamente cargue la primera columna de la matriz
                  // resultado que nos llega de la consulta
                } 
         }
         Puente.Cerrar();

      //  JOptionPane.showMessageDialog(null,"La consulta fue realizada correctamente");
      } catch (SQLException ex) {
          //Logger.getLogger(AgregarPacientes.class.getName()).log(Level.SEVERE, null, ex);
          JOptionPane.showMessageDialog(null, "Se presento un error en la consulta de BD");
          
      }  
    }   
    public void CargarCompleto()
    {
     // Este codigo es similar al anterior, solo que nos carga mas cosas en un combobox
     // Esto es util, para mostrar algo mas que el numero de una cedula por ejemplo.....   
     // El siguiente codigo se encarga de limpiar el combobox...
    // Es parecido a limpiar la tabla    
    int itemCount = comboCompleto.getItemCount();
    String Cadena="";
    for(int i=0;i<itemCount;i++){
        comboCompleto.removeItemAt(0);
     }
    
      try {
         ConexionMysql Puente2=new ConexionMysql();
         Statement sentencia2; // st
         ResultSet resultado2; //rs 
         
         Puente2.IniciarConexion();
         Connection conn=Puente2.getMyConnection();
         sentencia2= conn.createStatement();
         
        // JOptionPane.showMessageDialog(null,"La consulta sera"+comandosql);
         resultado2 = sentencia2.executeQuery(comandosql);
         ResultSetMetaData meta = resultado2.getMetaData();
         int columnas = meta.getColumnCount();  //Mientras haya registros 
         
         while (resultado2.next()) 
         {
                for (int i = 1; i <= columnas; i++) 
                { //Mostrar el dato del campo i
                  Cadena=Cadena.concat(resultado2.getString(i).toString()+"- ");
                  
                  // Yo use la cadena, para guardar los valores que deseo enviar despues al combobox
                  // el additem, no admite append.
                }
                comboCompleto.addItem(Cadena); // una vez cargada la cadena se hace el additem...
                Cadena=""; // Aqui limpio la cadena, para quede lista para el otro registro que se lea....
         }
         Puente2.Cerrar();

         // NOTA: Como se estan llamando, un metodo tras otro, se podria dejar
         // el mismo nombre, sin embargo, en este metodo, puse el numero2, al final de los objetos.
         
         
      //  JOptionPane.showMessageDialog(null,"La consulta fue realizada correctamente");
      } catch (SQLException ex) {
          //Logger.getLogger(AgregarPacientes.class.getName()).log(Level.SEVERE, null, ex);
          JOptionPane.showMessageDialog(null, "Se presento un error en la consulta de BD");
          
      }
        
        
    }        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboSoloID = new javax.swing.JComboBox<>();
        comboCompleto = new javax.swing.JComboBox<>();
        menu_cargar_comboboxes = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("AGREGAR CITAS");

        comboSoloID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        comboCompleto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        menu_cargar_comboboxes.setText("CARGAR COMBOBOXES");
        menu_cargar_comboboxes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_cargar_comboboxesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(comboSoloID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 241, Short.MAX_VALUE)
                .addComponent(comboCompleto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(220, 220, 220))
            .addGroup(layout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addComponent(menu_cargar_comboboxes)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(menu_cargar_comboboxes)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboCompleto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboSoloID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(260, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menu_cargar_comboboxesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_cargar_comboboxesActionPerformed
        // TODO add your handling code here:
        CargarId();
        CargarCompleto();
    }//GEN-LAST:event_menu_cargar_comboboxesActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboCompleto;
    private javax.swing.JComboBox<String> comboSoloID;
    private javax.swing.JButton menu_cargar_comboboxes;
    // End of variables declaration//GEN-END:variables
}
